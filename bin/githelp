#! /bin/bash
echo 'git branch -r'
echo 'git checkout -b _LOCAL_BRANCH_NAME'
echo 'git checkout -b _LOCAL_BRANCH_NAME_ --track origin/_REMOTE_BRANCH_NAME_'
echo 'git checkout tags/_REMOTE_TAG_NAME_ -b _LOCAL_BRANCH_NAME_'
echo 'git checkout -b _LOCAL_BRANCH_NAME_ _COMMIT_SHA_FROM_GITHUB_'
echo ''
echo '----------------------------'
echo 'add tag for past commit'
echo '----------------------------'
echo 'git checkout _SHA_FOR_COMMIT_'
echo 'GIT_COMMITTER_DATE="$(git show --format=%aD | head -1)" \'
echo 'git tag -a v_VERSION_NUM_ -m"v_VERSION_NUM_"'
echo 'git checkout master'
echo 'git push --tags'
echo ''
echo '----------------------------'
echo 'hard reset to code in github'
echo '----------------------------'
echo 'git reset --hard origin/_REMOTE_BRANCH_NAME_'
echo ''
echo '----------------------------'
echo 'update commit message before merging PR'
echo '----------------------------'
echo 'git rebase -i HEAD~3'
echo 'git push origin _BRANCH_NAME_ --force'
echo ''
echo '----------------------------'
echo 'update commit message after merging PR'
echo '----------------------------'
echo 'git rebase -i -p HEAD~3'
echo 'git push origin _BRANCH_NAME_ --force'
echo ''
echo '----------------------------'
echo 'push after rebasing brach on dev or main'
echo '----------------------------'
echo 'git push --force-with-lease origin _BRANCH_NAME_'
echo ''
echo '----------------------------'
echo 'sync fork with source'
echo '----------------------------'
echo 'THIS DOES NOT WORK - ended up deleting the fork and forking again'
echo ' Possibly could work if you setup the remote as soon as you fork'
echo '   one time setup...'
echo 'git remote -v'
echo 'git remote add upstream https://github.com/ORIGINAL_OWNER/ORIGINAL_REPO'
echo 'git remote -v'
echo ''
echo '   perform sync...'
echo 'git fetch upstream'
echo 'git checkout master'
echo 'git merge upstream/master'

