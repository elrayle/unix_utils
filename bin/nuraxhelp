#! /bin/bash
echo '=================================='
echo '       nurax-pg'
echo '=================================='
echo 'startup on local server'
echo '----------------------------------'
echo '--- from anywhere ---'
echo 'rgo # redis must be running for sidekiq to run'
echo '--- from root of app ---'
echo 'solrgo -n'
echo 'skgo'
echo 'bers # bundle exec rails s'
echo ' '
echo '=================================='
echo '       nurax-dev'
echo '=================================='
echo 'startup on local server'
echo '----------------------------------'
echo '--- from anywhere ---'
echo 'rgo # redis must be running for sidekiq to run'
echo '--- from root of app ---'
echo 'solrgo -v'
echo 'solrgo'
echo 'skgo'
echo 'bers # bundle exec rails s'
echo ' '
echo '----------------------------------'
echo 'nurax-pg add admin user'
echo '----------------------------------'
echo 'PREREQ: sign up user in UI'
echo ' '
echo '# OPTION 1: through rails console'
echo 'berc'
echo 'user = User.find_by(email: "user@email.com")'
echo 'role = Role.find_or_create(role: "admin")'
echo 'user.roles << role'
echo ' '
echo '# OPTION 2: through Role Manager UI'
echo '/users'
echo '  * copy email of user becoming an admin'
echo '/roles'
echo '  * see possible roles'
echo '/roles/1'
echo '  * admin is generally role 1 since it is added as part of the install process'
echo '  * paste email of new admin user in field at bottom of screen'
echo '  * click Add button'
echo ' '
echo '----------------------------------'
echo 'nurax-dev add admin user'
echo '----------------------------------'
echo 'edit /config/role_mapper.yml and add user email to dev -> admin...'
echo 'development:'
echo '  admin:'
echo '    - user_email@example.com'
echo ''
echo '----------------------------------'
echo 'Deploy to production'
echo '----------------------------------'
echo '# make sure branch to deploy has latest or desired branch in hyrax'
echo '# edit Gemfile and set branch you want if other than main'
echo 'bundle update hyrax'
echo '# in root of localhost nurax-pg or nurax-dev app (substitute main for nurax-pg/dev branch that has the hyrax and/or nurax changes you want to deploy'
echo 'BRANCH=main bundle exec cap prod deploy'
echo ' '
echo '----------------------------------'
echo 'ssh to nurax machines'
echo '----------------------------------'
echo '# run for every new terminal window - get passcode from 1p my GitHub login'
echo 'ssh-add ~/.ssh/github-deploy'
echo ' '
echo 'ssh _GET_FROM_SYSOPTS_'
echo 'cd /opt/nurax-pg/current'
echo ' '
echo 'ssh _GET_FROM_SYSOPTS_'
echo 'cd /opt/nurax/current'
echo ' '
echo '# look for gems under /opt/nurax-pg/shared'
echo '# look for gems under /opt/nurax/shared'
echo ' '
echo '# explore database on nurax machines'
echo '# get database user password from ENV["DB_PASSWORD"] in rails c'
echo 'bundle exec rails dbconsole'
echo ' '
echo '# add users public key to grant ssh access'
echo 's/pk/pubkey'
echo ' '
echo '----------------------------------'
echo 'connect to solr'
echo '----------------------------------'
echo 'ssh -L 2222:localhost:8983 _GET_FROM_SYSOPTS_'
echo 'http://localhost:2222'
echo ' '
echo 'ssh -L 2223:localhost:8983 _GET_FROM_SYSOPTS_'
echo 'http://localhost:2223'
echo ' '
echo '----------------------------------'
echo 'update ENV variable'
echo '----------------------------------'
echo '# in app root'
echo 'vi .env.production  # modify and save'
echo 'touch tmp/restart.txt'
echo '### NOTE there will be no feedback, but the next server request will restart.  Can force this with `bundle exec rails c` and check the value.'
echo ' '
